{"version":3,"sources":["components/Loader/Loader.module.css","components/Searchbar/Searchbar.jsx","services/api.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.jsx","index.js","components/Button/Button.module.css"],"names":["module","exports","Searchbar","onSearch","useState","nameValue","setNameValue","className","onSubmit","e","preventDefault","trim","alert","type","onChange","currentTarget","value","toLowerCase","name","autoComplete","autoFocus","placeholder","api","fetchImages","searchName","pageNumber","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","tags","webformatURL","openModal","onClick","src","alt","ImageGallery","images","map","id","largeImageURL","Button","style","Container","LoaderSpiner","Spiner","color","height","width","timeout","ModalRoot","document","querySelector","Modal","onClose","image","useEffect","window","addEventListener","handleKeyPress","removeEventListener","code","createPortal","target","role","App","setSearchName","setImages","selectedImage","setSelectedImage","reqStatus","setReqStatus","setPageNumber","modalIsOpen","setModalIsOpen","error","setError","data","hits","pictures","length","prevImages","scrollTo","top","body","scrollHeight","behavior","catch","handleFormSubmit","onLoadMore","prevState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cbe5ef81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spiner\":\"Loader_Spiner__3xzFk\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Searchbar({ onSearch }) {\n  const [nameValue, setNameValue] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    setNameValue(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (nameValue.trim() === \"\") {\n      return alert(\"Enter valid name,please!\");\n    }\n    onSearch(nameValue);\n    setNameValue(\"\");\n  };\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSearch}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          onChange={handleNameChange}\n          className=\"SearchForm-input\"\n          type=\"text\"\n          name=\"searchName\"\n          value={nameValue}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n","function fetchImages(searchName, pageNumber) {\n  const key = \"21756599-0afd71203aca16b66ad6b1f5f\";\n\n  return fetch(\n    `https://pixabay.com/api/?q=${searchName}&page=${pageNumber}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`There is no images with name ${searchName}`)\n    );\n  });\n}\nconst api = { fetchImages };\nexport default api;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction ImageGalleryItem({ tags, webformatURL, openModal }) {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={openModal}>\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n}\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\n\nfunction ImageGallery({ images, openModal }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          tags={tags}\n          webformatURL={webformatURL}\n          openModal={() => openModal(largeImageURL, tags)}\n        ></ImageGalleryItem>\n      ))}\n    </ul>\n  );\n}\n\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport style from \"./Button.module.css\";\n\nfunction Button({ onClick }) {\n  return (\n    <div className={style.Container}>\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\n        Load more\n      </button>\n    </div>\n  );\n}\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nimport style from \"./Loader.module.css\";\n\nexport default function LoaderSpiner() {\n  return (\n    <div className={style.Spiner}>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={120}\n        width={120}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst ModalRoot = document.querySelector(\"#modal-root\");\n\nfunction Modal({ onClose, image }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n\n  const handleKeyPress = (e) => {\n    if (e.code !== \"Escape\") {\n      return;\n    }\n    onClose();\n  };\n\n  const handleBackdropClick = (e) => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onClose();\n  };\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick} role=\"presentation\">\n      <div className=\"Modal\">\n        <img src={image.src} alt={image.alt} />\n      </div>\n    </div>,\n    ModalRoot\n  );\n}\n\nexport default Modal;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport api from \"./services/api\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"./components/Button/Button\";\nimport LoaderSpiner from \"./components/Loader/Loader\";\nimport Modal from \"./components/Modal/Modal\";\n\nexport default function App() {\n  const [searchName, setSearchName] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [reqStatus, setReqStatus] = useState(\"idle\");\n  const [pageNumber, setPageNumber] = useState(1);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (!searchName) {\n      return;\n    }\n\n    setReqStatus(\"pending\");\n\n    api\n      .fetchImages(searchName, pageNumber)\n      .then((data) => data.hits)\n      .then((pictures) => {\n        if (pictures.length === 0) {\n          setReqStatus(\"rejected\");\n          alert(`'${searchName}' not found!`);\n        }\n        setImages((prevImages) => [...prevImages, ...pictures]);\n        setReqStatus(\"resolved\");\n\n        if (pageNumber > 1) {\n          window.scrollTo({\n            top: document.body.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      })\n      .catch((error) => setError(error), setReqStatus(\"rejected\"));\n  }, [searchName, pageNumber]);\n\n  const resetState = () => {\n    setSearchName(\"\");\n    setPageNumber(1);\n    setImages([]);\n    setSelectedImage(null);\n    setReqStatus(\"idle\");\n    setModalIsOpen(false);\n  };\n\n  const handleFormSubmit = (searchName) => {\n    resetState();\n    setSearchName(searchName);\n  };\n\n  const openModal = (src, alt) => {\n    setModalIsOpen(true);\n    setSelectedImage({ src, alt });\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  const onLoadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  if (reqStatus === \"idle\") {\n    return (\n      <div className=\"App\">\n        <Searchbar onSearch={handleFormSubmit} />\n      </div>\n    );\n  }\n\n  if (reqStatus === \"pending\") {\n    return (\n      <div className=\"App\">\n        <Searchbar onSearch={handleFormSubmit} />\n        <ImageGallery openModal={openModal} images={images} />\n        <LoaderSpiner />\n        {images.length > 0 && <Button onClick={onLoadMore} />}\n      </div>\n    );\n  }\n\n  if (reqStatus === \"rejected\") {\n    return (\n      <div className=\"App\">\n        <Searchbar onSearch={handleFormSubmit} />\n        <h1>{error}</h1>\n      </div>\n    );\n  }\n\n  if (reqStatus === \"resolved\") {\n    return (\n      <div className=\"App\">\n        <Searchbar onSearch={handleFormSubmit}></Searchbar>\n        <ImageGallery images={images} openModal={openModal}></ImageGallery>\n        {images.length > 0 && <Button onClick={onLoadMore} />}\n        {modalIsOpen && <Modal image={selectedImage} onClose={closeModal} />}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Button_Container__EwKtO\"};"],"sourceRoot":""}